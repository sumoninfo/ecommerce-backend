<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use App\Helpers\Helper;
use Illuminate\Http\Request;
use App\Http\Resources\{{ model }}Resource;

class {{ class }} extends Controller
{
      /**
     * {{ class }}Controller constructor.
     */
    public function __construct()
    {
        $this->middleware('permission:appointment-view|appointment-create|appointment-update|appointment-delete', ['only' => ['index', 'store']]);
        $this->middleware('permission:appointment-create', ['only' => ['create', 'store']]);
        $this->middleware('permission:appointment-update', ['only' => ['edit', 'update']]);
        $this->middleware('permission:appointment-delete', ['only' => ['destroy']]);
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Resources\Json\AnonymousResourceCollection
     */
    public function index(Request $request)
    {
          $query = {{ model }}::query();
          if ($request->filled('search')) {
              $query->where('name', 'LIKE', "%{$request->search}%");
          }
          $query = $query->latest()->paginate($request->get('per_page', config('constant.mrhPagination')));
          return {{ model }}Resource::collection($query);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(Request $request)
    {
        $obj = new {{ model }}();
        $obj->fill($request->all());
        $obj->hospital_id = Helper::getHospitalId($request->input('hospital_id'));
        $obj->save();
        return Helper::returnResponse("success", "Created successfully", $obj);
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return {{ model }}Resource
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        return new {{ model }}Resource(${{ modelVariable }});
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\JsonResponse
     */
    public function update(Request $request, {{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->fill($request->all());
        ${{ modelVariable }}->update();
        return Helper::returnResponse("success", "Updated successfully", ${{ modelVariable }});
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
       ${{ modelVariable }}->delete();
       return Helper::returnResponse("success", "Deleted successfully");
    }
}
